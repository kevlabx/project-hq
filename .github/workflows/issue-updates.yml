name: Sync issues into data
on:
  issues:
    types: [opened, edited, labeled]
permissions:
  contents: write
  issues: read

jobs:
  task_update:
    if: contains(github.event.issue.labels.*.name, 'task-update')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Parse issue JSON
        id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body || "";
            const m = body.match(/```json([\s\S]*?)```/);
            if (!m) core.setFailed("No JSON block found in issue body.");
            const data = JSON.parse(m[1]);
            core.setOutput("taskId", data.taskId);
            core.setOutput("status", data.status || "");
            core.setOutput("percent", String(data.percent ?? ""));
            core.setOutput("note", data.note || "");
            core.setOutput("owner", data.owner || "");

      - name: Update tasks.json
        uses: actions/github-script@v7
        env:
          TASK_ID: ${{ steps.parse.outputs.taskId }}
          STATUS: ${{ steps.parse.outputs.status }}
          PERCENT: ${{ steps.parse.outputs.percent }}
        with:
          script: |
            const fs = require('fs');
            const path = 'data/tasks.json';
            const raw = fs.readFileSync(path,'utf8');
            const tasks = JSON.parse(raw);
            const id = process.env.TASK_ID;
            const status = process.env.STATUS;
            const percentStr = process.env.PERCENT;
            const percent = percentStr === "" ? NaN : Number(percentStr);
            let found = false;
            for (const t of tasks) {
              if (t.id === id) {
                if (status) t.status = status;
                if (!isNaN(percent)) t.percent = percent;
                found = true;
                break;
              }
            }
            if (!found) core.setFailed(`Task ${id} not found`);
            fs.writeFileSync(path, JSON.stringify(tasks, null, 2));
            core.info('tasks.json updated');

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: sync issue â†’ data for ${{ steps.parse.outputs.taskId }}"
          branch: ${{ github.event.repository.default_branch }}

  bug_add:
    if: github.event.action == 'opened' && contains(github.event.issue.labels.*.name, 'bug')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Append bug to bugs.json
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const p = 'data/bugs.json';
            const arr = JSON.parse(fs.readFileSync(p,'utf8') || '[]');
            const issue = context.payload.issue;
            // avoid duplicates
            if (!arr.find(b => b.id === issue.number)) {
              arr.push({
                id: issue.number,
                title: issue.title,
                status: "New",
                severity: "Sev2"
              });
              fs.writeFileSync(p, JSON.stringify(arr, null, 2));
              core.info('bugs.json updated');
            } else {
              core.info('bug already present');
            }

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: record bug #${{ github.event.issue.number }}"
          branch: ${{ github.event.repository.default_branch }}
